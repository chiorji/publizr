package dev.publizr.bootstrap;import com.fasterxml.jackson.core.type.TypeReference;import com.fasterxml.jackson.databind.ObjectMapper;import dev.publizr.post.PostRepository;import dev.publizr.post.models.Post;import dev.publizr.post.models.PostListDTO;import jakarta.annotation.Priority;import org.springframework.boot.CommandLineRunner;import org.springframework.core.Ordered;import org.springframework.stereotype.Component;import java.io.InputStream;@Component@Priority(Ordered.LOWEST_PRECEDENCE)public class PostBootstrap implements CommandLineRunner {	private final PostRepository postRepository;	private final ObjectMapper objectMapper;	public PostBootstrap(PostRepository postRepository, ObjectMapper objectMapper) {		this.postRepository = postRepository;		this.objectMapper = objectMapper;	}	@Override	public void run(String... args) throws Exception {		long size = postRepository.list().size();		if (size == 0) {			try (InputStream inputStream = TypeReference.class.getResourceAsStream("/data/posts.json")) {				PostListDTO posts = objectMapper.readValue(inputStream, PostListDTO.class);				for (Post post : posts.posts()) {					Integer postId = postRepository.save(post);					System.out.println("Default post published with with ID " + postId);				}			} catch (RuntimeException e) {				System.out.println("No post was loaded, database already contain posts.");				throw new RuntimeException(e);			}		}	}}