package dev.publizr.bootstrap;import com.fasterxml.jackson.core.type.TypeReference;import com.fasterxml.jackson.databind.ObjectMapper;import dev.publizr.user.UserRepository;import dev.publizr.user.models.SignUpDTO;import dev.publizr.user.models.SignUpListDTO;import jakarta.annotation.Priority;import org.springframework.boot.CommandLineRunner;import org.springframework.core.Ordered;import org.springframework.stereotype.Component;import java.io.InputStream;@Component@Priority(Ordered.HIGHEST_PRECEDENCE)public class UserBootstrap implements CommandLineRunner {	private final UserRepository userRepository;	private final ObjectMapper objectMapper;	public UserBootstrap(UserRepository userRepository, ObjectMapper objectMapper) {		this.userRepository = userRepository;		this.objectMapper = objectMapper;	}	@Override	public void run(String... args) throws Exception {		long size = userRepository.list().size();		if (size == 0) {			try (InputStream inputStream = TypeReference.class.getResourceAsStream("/data/users.json")) {				SignUpListDTO users = objectMapper.readValue(inputStream, SignUpListDTO.class);				for (SignUpDTO user : users.users()) {					Integer userId = userRepository.createUser(user);					System.out.printf("Default user created with ID '%d'", userId);				}			} catch (RuntimeException e) {				System.out.println("No user was loaded, database already contain users.");				throw new RuntimeException(e);			}		}	}}